# atividade-de-vetores
vetores 


/EXERCICIO 1
/*Escreva um programa  lê matricula e as notas de no máximo 100
alunos. O programa deve ler e armazenar uma nova matricula e uma nova nota
enquanto o usuário desejar. Após o armazenamento permita ao usuário
consultar a nota de um aluno digitando sua matricula, o programa deve permitir
no máximo 10 consultas para um mesmo ciclo de execução do programa*/
/*int main(){
    int matricula[100],i,notas[100];
    for ( i = 0; i < 100; i++)
    {
      
    }
    
}*/

//Exercico 2
/*
int main(){
    int v[10],v1[10],v2[10],i,calc,par[10],impar[10];
    for ( i = 0; i < 10; i++)
    {
        printf("M forneca o numero %d :",i);
        scanf("%d",&v[i]);
        calc = v[i] %2;
        if (calc ==0)
        {
            v1[i]=v[i];
            par[i] = 1;
        }else if (calc > 0)
        {
           v2[i]=v[i];
            impar[i]=1;
        }  
    }
    for ( i = 0; i < 10; i++)
    {
      if (impar[i]==1)
      {
       printf("Numero impar e %d na posicao %d\n",v2[i],i);
      }  
    }
    for ( i = 0; i < 10; i++)
    {
        if (par[i]==1 )
      {
        printf("Numero par e %d na posicao %d\n",v1[i],i);
      }
    }
}
*/

//Exercicio 3
/*para ler 10 números DIFERENTES a serem
armazenados em um vetor. Os dados deverão ser armazenados no vetor na
ordem que forem sendo lidos, sendo que caso o usuário digite um número que
já foi digitado anteriormente, o programa deverá pedir para ele digitar outro
número. Note que cada valor digitado pelo usuário deve ser pesquisado no
vetor, verificando se ele existe entre os números que já foram fornecidos. Exibir
na tela o vetor final que foi digitado*/
/*
int main (){
    int num[10],i,a,j;
    for ( i = 0; i < 10; i++)
    {
       printf("Me forneca o numero %d :",i);
       scanf("%d",&num[i]);
       a=num[i];
       for ( j = 0; j < 10; j++)
        {
            if (a ==num[j])
            {
                printf("Me forneca outro numero pfv pois o num %d ja existe :",num[j]);
                scanf("%d",&num[j]);
                
            }
            
        }
    
    }
}*/

//EXERCICIO 4
/*Crie um programa em C que leia os elementos de uma matriz inteira 4 x 6 e
imprima todos os elementos, exceto os elementos da diagonal principal.*/
/*
int main(){
    int num[6][6],i,j;
    for ( i = 0; i < 6; i++)
    {
        for ( j = 0; j < 6; j++)
        {
           printf("Me forneça o numero a ser armazenado em [%d] [%d] :", i,j);
           scanf("%d",&num[i][j]);
        }
        
    }
     for ( i = 1; i < 6; i++)
    {
        for (  j= 0; j < 6; j++)
        {
            printf("%d\n",num[i][j]);
        }
        
    }
}*/

//Exercicio5
/* Desenvolva um programa em C que leia duas matrizes 4 x 4 e escreva uma
terceira com os maiores valores de cada posição das matrizes lidas*/
/*
int main(){
int A[4][4], B[4][4], C[4][4];
for(int i = 0; i < 4; i++)
{
 for(int j = 0; j < 4; j++)
 {
  printf("A(%i,%i) =", i, j);
  scanf("%i", &A[i][j]);
 }
}
for(int i = 0; i < 4; i++)
{
 for(int j = 0; j < 4; j++)
 {
  printf("B(%i,%i) =", i, j);
  scanf("%i", &B[i][j]);
 }
}
for(int i = 0; i < 4; i++)
{
 for(int j = 0; j < 4; j++)
 {
  if(A[i][j] >= B[i][j])
  {
   C[i][j] = A[i][j];
  }
  else
  {
   C[i][j] = B[i][j];
  }
 }
}
for(int i = 0; i < 4; i++)
{
 for(int j = 0; j < 4; j++)
 {
  printf("C(%i,%i) = %i\n", i, j, C[i][j]);
 }
}
return 0;
}
*/

//exercicio 6




//exercicio 7 
/*
int main (){
 int matris[3][3],col1=0,col2=0,col3=0,i,j;
    for ( i = 0; i < 3; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            printf ("ME forneça o valor da matrix na posicao %d %d",i,j);
            scanf("%d",&matris[i][j]);
        }
        
    }
    for ( i = 0; i < 3; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            printf("%d\t",matris[i][j]);
        
        }
        printf("\n");
    }
    for ( i = 0; i < 3; i++)
    {
        
        col1 = col1 + matris[i][i];
        printf("%d",col1);
       
    }
    for ( i = 0; i < 2; i++)
    {
         col2 = col2+ matris[i][i+1]; 
    }
    for ( i = 0; i < 2; i++)
    { 
       col3 = col3 + matris[i+1][i];
    }
    printf("O Valor da diagonal princilao e=%d\nO valor da diagonal superior e=%d\nE o valor da diagonal inferior e=%d ",col1,col2,col3);
    
}*/

// Exercicio 8
/*
int main (){
    int matrix[10][10],i,j ;
    for ( i = 0; i < 10; i++)
    {
        for ( j = 0; j < 10; j++)
        {
            if (i<j)
            {
             matrix[i][j] = 2*i + 7*j -2;  
            }
            else if (i==j)
            {
            matrix[i][j]= pow(3*i,2) - 1;
            }
            else if (i>j)
            {
               matrix[i][j]= pow(4*i,3) + pow(5*j,2) +1;
            } 
        }
            
    }
     for ( i = 0; i < 10; i++)
    {
        for ( j = 0; j < 10; j++)
        {
            printf("%d\t",matrix[i][j]);
        
        }
        printf("\n");
    }
      
}*/

//Exercicio 9

/*Faça um programa em C que leia uma matriz 10 x 3 com as notas de 10
alunos em 3 disciplinas. Em seguida, calcule e escreva o número de alunos
cuja pior nota foi na disciplina 1, o número de alunos cuja pior nota foi na
disciplina 2, e o número de alunos cuja a pior nota foi na disciplina 3. Em caso
de empate das piores notas de um aluno, o critério de desempate é arbitrário,
mas o aluno deve ser contabilizado apenas uma vez*/
/*
int main(){
    int matrix[10][3],pior = 100,ruimNota[3],aluno[3],materia[3],i,j;
    for ( i = 0; i < 10; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            printf("Me forneça a nota %d do aluno %d (%d,%d):",j,i,i,j);
            scanf("%d",&matrix[i][j]);
        }
        
    }
    
    for ( j = 0; j < 3; j++)
    {
        ruim = 100;
        for ( i = 0; i < 10; i++)
        {
            if (matrix[i][j]< ruim)
            {
                ruim = matrix[i][j];
                ruimNota[j]=matrix[i][j];
                aluno[j]=i;
                materia[j]=j;
            }
        }
        
    }
    
    for ( i = 0; i < 3; i++)
    {
        printf("o pior aluno na materia  %d foi %d com %d\n",i,aluno[i],ruimNota[i]);
    }
   
   
   
   //Lista 1 de C - Structs 

Questão 1

#include <stdio.h>
#include <stdlib.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {
	
	struct cadastros{
		
    	char nome[80];
    	char endereco[80];
    	char telefone[12];
    	
 	};
	 struct cadastros pessoa[3];
	 
	 int i,j;
	 
	for(i = 0; i <= 2; i++){
	
		printf("\n---------- Cadastro de Pessoa -----------\n");
		printf("\n Digite seu nome: \n");
		scanf("%[^\n]%*c",pessoa[i].nome);
		printf("\n Digite seu endereço \n");
		scanf("%[^\n]%*c",pessoa[i].endereco);
		printf("\n Digite seu telefone \n");
		scanf("%[^\n]%*c", pessoa[i].telefone);
	 
    }
	for( j = 0; j <= 2; j++){
		
		printf("\n---------- Cadastro %i -----------\n",i);
		printf("Nome: %s \n",pessoa[j].nome);
		printf("Endereço: %s \n",pessoa[j].endereco);
		printf("Telefone: %s \n",pessoa[j].telefone);
		printf("\n----------------------------------\n");
	}
	 
	
	return 0;
}



questão 2:


#include <stdio.h>
#include <stdlib.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {
	
	struct DadosAlunos{
		
    	char nome[80];
    	char idade[5];
    	
 	};
	struct DadosAlunos DadosAluno;


	printf("\n Digite seu nome: \n");
	scanf("%[^\n]%*c",DadosAluno.nome);
	printf("\n Digite sua idade \n");
	scanf("%[^\n]%*c",DadosAluno.idade);

	printf("Nome: %s \n",DadosAluno.nome);
	printf("Idade: %s \n",DadosAluno.idade);

	return 0;
}

Questão 3:

#include <stdio.h>
#include <stdlib.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {
	
	struct produto{
		
    	char nome[10];
    	int codigo;
    	
 	};
	struct produto dadosproduto;
	

	return 0;
}

questão 4:

#include <stdio.h>
#include <stdlib.h>

struct cadastroV{
		
	char marca[20];
    char modelo[20];
    char cor[20];
    char qtdportas[20];
    char motorizacao[20];
    	
};struct cadastroV dadosV[10];

void Cveiculo(){
	
	struct cadastroV dadosV[10];
	int i;
	 
	for(i = 0; i < 9; i++){
	
		printf("\n---------- Cadastro de Veículo -----------\n");
		printf("\n Digite a marca: \n");
		scanf("%[^\n]%*c",dadosV[i].marca);
		printf("\n Digite o modelo \n");
		scanf("%[^\n]%*c",dadosV[i].modelo);
		printf("\n Digite a cor \n");
		scanf("%[^\n]%*c", dadosV[i].cor);
		printf("\n Digite a motorização: \n");
		scanf("%[^\n]%*c", dadosV[i].motorizacao);
		printf("\n Digite a Quantidade de portas \n");
		scanf("%[^\n]%*c", dadosV[i].qtdportas);
	 	printf("\n------------------------------------------\n");
    }
	
}

void MostrarV(){
	
	struct cadastroV dadosV[10];
	int j;
	 
	for(j = 0; j < 9; j++){
	
		printf("\n---------- Cadastro de Veículo %i-----------\n");
		printf("\n Marca: %s \n",dadosV[j].marca);
		printf("\n Modelo: %s \n",dadosV[j].modelo);
		printf("\n Cor %s \n",dadosV[j].cor);
		printf("\n Motorização: %s\n",dadosV[j].motorizacao);
		printf("\n Quantidade de portas: %s \n",dadosV[j].qtdportas);
	 	printf("\n--------------------------------------------\n");
    }
	
	
}
void Cveiculo();
void MostrarV();
void menu(){
	
	int cod;
	
	Prinf("Digite : \n 1 - Para Cadastrar seus veículo\n 2 - Para mostrar o cadastro dos seus veículos\n");
	scanf("%i", & cod);
	
	switch(cod){
		
		case 1:
			
			Cveiculo();
			menu();
			
		case 2:
			
			MostrarV();
			menu();
			
		default:
		
			printf("Digite uma opcao valida !!!\n");
			menu();
		case 0:
		
		break;
			
	}
		
	
	
}
void Cveiculo();
void MostrarV();
void menu();
int main(int argc, char *argv[]) {
	

	
	menu();
	
	
	return 0;
}

Questão 5:

#include <stdio.h>
#include <stdlib.h>


int main(int argc, char *argv[]) {
	
	struct vetores{
		
		int a;
		int b;
		int c;
		
	};
	
	struct vetores vetor[1];
	
	int somaVa,somaVb,somaVc;
	
		printf("\n---------- Cadastro do Vetor 1 para somar -----------\n");
		printf("\n Coordenada A : \n");
		scanf("%i", & vetor[0].a);
		printf("\n Coordenada B : \n");
		scanf("%i", & vetor[0].b);
		printf("\n Coordenada C : \n");
		scanf("%i", & vetor[0].c);	
	
		
		printf("\n---------- Cadastro do Vetor 2 para somar -----------\n");
		printf("\n Coordenada A : \n");
		scanf("%i", & vetor[1].a);
		printf("\n Coordenada B : \n");
		scanf("%i", & vetor[1].b);
		printf("\n Coordenada C : \n");
		scanf("%i", & vetor[1].c);	
		printf("\n-----------------------------------------------------\n");
	
	somaVa = (vetor[0].a+vetor[1].a);
	somaVb = (vetor[0].b+vetor[1].b);
	somaVc = (vetor[0].c+vetor[1].c);
	printf("O resultado da soma dos seus vetores é: (%i,%i,%i)", somaVa,somaVb,somaVc);
	
	return 0;
}



//Lista 2: funções;


Questão 1:

#include <stdio.h>
#include <stdlib.h>
void qualomaior(n1,n2){
	
	if(n1  > n2){
		
		printf("O %i é o maior!!! \n",n1);
		
	}
	if(n2 > n1){
		
	printf("O %i é o maior!!! \n",n2);
		
	}
	if(n1 == n2){
		
	printf("Os números são iguais!!! \n");
		
		
	}
	
}
void qualomaior(n1,n2);
int main(int argc, char *argv[]) {
	
	int n1,n2;
	
	printf("Digite um número: \n");
	scanf("%i", & n1);
	printf("Digite outro número: \n");
	scanf("%i", & n2);
	
	qualomaior(n1,n2);
	
	return 0;
}

questão 2:

#include <stdio.h>
#include <stdlib.h>

void qualomes(n1){
	
	if(n1 == 1){
		
		printf("Janeiro \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 2){
		
		printf("Fevereiro \n");
		printf(" Possui 28 dias (Exceto em ano bixexto, nesse caso possui  29 dias) \n");
	
	}
	if(n1 == 3){
		
		printf("Março \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 4){
		
		printf("Abril \n");
		printf(" Possui 30 dias \n");
	
	}
	if(n1 == 5){
		
		printf("Maio \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 6){
		
		printf("Junho \n");
		printf(" Possui 30 dias \n");
	
	}
	if(n1 == 7){
		
		printf("Julho \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 8){
		
		printf("Agosto \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 9){
		
		printf("Setembro \n");
		printf(" Possui 30 dias \n");
	
	}
	if(n1 == 10){
		
		printf("Outubro \n");
		printf(" Possui 31 dias \n");
	
	}
	if(n1 == 11){
		
		printf("Novembro \n");
		printf(" Possui 30 dias \n");
	
	}
	if(n1 == 12){
		
		printf("Dezembro \n");
		printf(" Possui 31 dias \n");
	
	}		
}


void qualomes(n1);
int main(int argc, char *argv[]) {
	
	int n1;
	
	printf("Digite um número: \n");
	scanf("%i", & n1);
	
	qualomes(n1);
	
	
	return 0;
}

Questão 3:

#include <stdio.h>
#include <stdlib.h>

void convercaoC(F){
	
	float c;
	
	c = ((F - 32.0)*(5.0/9.0));
	
	printf("Esse valor em celsius eh: %.2f \n", c);
	
}


void covercaoC(F);
int main(int argc, char *argv[]) {
	
	float F;
	
	printf("Digite a temperatura em Fahrenheit que deseja converter para Celsius: \n");
	scanf("%f", & F);
	
	convercaoC(F);	
	
	return 0;
}

Questão 4: 

#include <stdio.h>
#include <stdlib.h>


void volume(altura,raio){
	
	float v;
	
	v = (3.1414592*(raio*raio)*altura);
	
	printf("O volume do seu cilindro eh: %.2f \n",v);
	
}


void volume(altura,raio);
int main(int argc, char *argv[]) {
	
	float altura,raio;
	
	printf("Para calcular o volume do seu cilindro digite sua altura: \n");
	scanf("%f", & altura);
	printf("Agora digite o raio do seu cilindro: \n");
	scanf("%f", & raio);
	
	volume(altura,raio);	
	
	return 0;
}

Questão 5:

#include <stdio.h>
#include <stdlib.h>


void volume(raio){
	
	long double v;
	
	v = 4/ (3*3.1414592 * (raio*raio*raio));
	
	printf("O volume da sua esfera eh: %.2e \n",v);
	
}


void volume(raio);
int main(int argc, char *argv[]) {
	
	long double raio;
	
	printf("Para calcular o volume da sua esfera o digite seu raio: \n");
	scanf("%e", & raio);

	
	volume(raio);	
	
	return 0;
}

Questão 6:

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void imc(peso,altura){
	
	float IMC;
	
	IMC = peso/(altura*altura);
	
	printf("O seu peso ideal é: %.2f \n",IMC);
	
}


void imc(peso,altura);
int main(int argc, char *argv[]) {
	
	float peso, altura;
	
	printf("Para calcularmos seu peso ideal você precisa digitar a seu peso: \n");
	scanf("%f", & peso);
	printf("E agora a sua altura: \n");
	scanf("%f", & altura);
	
	imc(peso,altura);	
	
	return 0;
}
